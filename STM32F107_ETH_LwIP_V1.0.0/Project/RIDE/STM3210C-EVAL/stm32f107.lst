
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE\STM3210C-EVAL\stm32f107.o:     file format elf32-littlearm
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE\STM3210C-EVAL\stm32f107.o

Disassembly of section .text.NVIC_SetPriority:

00000000 <NVIC_SetPriority>:
NVIC_SetPriority():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1186
 *
 * Note: The priority cannot be set for every core interrupt.
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
   0:	2800      	cmp	r0, #0
   2:	ea4f 1101 	mov.w	r1, r1, lsl #4
   6:	da06      	bge.n	16 <NVIC_SetPriority+0x16>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1187
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   8:	4a06      	ldr	r2, [pc, #24]	(24 <NVIC_SetPriority+0x24>)
   a:	f000 030f 	and.w	r3, r0, #15	; 0xf
   e:	b2c9      	uxtb	r1, r1
  10:	189a      	adds	r2, r3, r2
  12:	7611      	strb	r1, [r2, #24]
  14:	e004      	b.n	20 <NVIC_SetPriority+0x20>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1189
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts      */
  16:	4b04      	ldr	r3, [pc, #16]	(28 <NVIC_SetPriority+0x28>)
  18:	b2ca      	uxtb	r2, r1
  1a:	18c3      	adds	r3, r0, r3
  1c:	f883 2300 	strb.w	r2, [r3, #768]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1190
}
  20:	4770      	bx	lr
  22:	46c0      	nop			(mov r8, r8)
  24:	e000ecfc 	.word	0xe000ecfc
  28:	e000e100 	.word	0xe000e100
Disassembly of section .text.NVIC_Configuration:

00000000 <NVIC_Configuration>:
NVIC_Configuration():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:342
  * @brief  Configures the nested vectored interrupt controller.
  * @param  None
  * @retval None
  */
void NVIC_Configuration(void)
{
   0:	b507      	push	{r0, r1, r2, lr}
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:346
  NVIC_InitTypeDef   NVIC_InitStructure;

  /* Set the Vector Table base location at 0x08000000 */
  NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0);
   2:	2100      	movs	r1, #0
   4:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
   8:	f7ff fffe 	bl	0 <NVIC_SetVectorTable>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:349

  /* 2 bit for pre-emption priority, 2 bits for subpriority */
  NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); 
   c:	f44f 60a0 	mov.w	r0, #1280	; 0x500
  10:	f7ff fffe 	bl	0 <NVIC_PriorityGroupConfig>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:352
  
  /* Enable the Ethernet global Interrupt */
  NVIC_InitStructure.NVIC_IRQChannel = ETH_IRQn;
  14:	233d      	movs	r3, #61
  16:	f88d 3004 	strb.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:353
  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
  1a:	2302      	movs	r3, #2
  1c:	f88d 3005 	strb.w	r3, [sp, #5]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:354
  NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
  20:	2300      	movs	r3, #0
  22:	f88d 3006 	strb.w	r3, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:356
  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  NVIC_Init(&NVIC_InitStructure);    
  26:	a801      	add	r0, sp, #4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:355
  
  /* Enable the Ethernet global Interrupt */
  NVIC_InitStructure.NVIC_IRQChannel = ETH_IRQn;
  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
  NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  28:	3301      	adds	r3, #1
  2a:	f88d 3007 	strb.w	r3, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:356
  NVIC_Init(&NVIC_InitStructure);    
  2e:	f7ff fffe 	bl	0 <NVIC_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:358
  
}
  32:	bd0e      	pop	{r1, r2, r3, pc}
Disassembly of section .text.ADC_Configuration:

00000000 <ADC_Configuration>:
ADC_Configuration():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:314
  * @brief  Configures the ADC.
  * @param  None
  * @retval None
  */
void ADC_Configuration(void)
{
   0:	b530      	push	{r4, r5, lr}
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:324
  ADC_InitStructure.ADC_ScanConvMode = DISABLE;
  ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
  ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
  ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
  ADC_InitStructure.ADC_NbrOfChannel = 1;
  ADC_Init(ADC1, &ADC_InitStructure);
   2:	4c11      	ldr	r4, [pc, #68]	(48 <ADC_Configuration+0x48>)
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:314
  * @brief  Configures the ADC.
  * @param  None
  * @retval None
  */
void ADC_Configuration(void)
{
   4:	b087      	sub	sp, #28
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:318
  ADC_InitTypeDef ADC_InitStructure;

  /* ADC1 Configuration ------------------------------------------------------*/
  ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
   6:	2200      	movs	r2, #0
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:320
  ADC_InitStructure.ADC_ScanConvMode = DISABLE;
  ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
   8:	2501      	movs	r5, #1
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:321
  ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
   a:	f44f 2360 	mov.w	r3, #917504	; 0xe0000
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:324
  ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
  ADC_InitStructure.ADC_NbrOfChannel = 1;
  ADC_Init(ADC1, &ADC_InitStructure);
   e:	4620      	mov	r0, r4
  10:	a901      	add	r1, sp, #4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:318
void ADC_Configuration(void)
{
  ADC_InitTypeDef ADC_InitStructure;

  /* ADC1 Configuration ------------------------------------------------------*/
  ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
  12:	9201      	str	r2, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:319
  ADC_InitStructure.ADC_ScanConvMode = DISABLE;
  14:	f88d 2008 	strb.w	r2, [sp, #8]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:321
  ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
  ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
  18:	9303      	str	r3, [sp, #12]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:322
  ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
  1a:	9204      	str	r2, [sp, #16]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:320
  ADC_InitTypeDef ADC_InitStructure;

  /* ADC1 Configuration ------------------------------------------------------*/
  ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
  ADC_InitStructure.ADC_ScanConvMode = DISABLE;
  ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
  1c:	f88d 5009 	strb.w	r5, [sp, #9]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:323
  ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
  ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
  ADC_InitStructure.ADC_NbrOfChannel = 1;
  20:	f88d 5014 	strb.w	r5, [sp, #20]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:324
  ADC_Init(ADC1, &ADC_InitStructure);
  24:	f7ff fffe 	bl	0 <ADC_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:327

  /* ADC1 regular channel14 configuration */
  ADC_RegularChannelConfig(ADC1, ADC_Channel_14, 1, ADC_SampleTime_13Cycles5);
  28:	4620      	mov	r0, r4
  2a:	210e      	movs	r1, #14
  2c:	462a      	mov	r2, r5
  2e:	2302      	movs	r3, #2
  30:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:330

  /* Enable ADC1 */
  ADC_Cmd(ADC1, ENABLE);
  34:	4620      	mov	r0, r4
  36:	4629      	mov	r1, r5
  38:	f7ff fffe 	bl	0 <ADC_Cmd>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:333

  /* Start ADC1 Software Conversion */
  ADC_SoftwareStartConvCmd(ADC1, ENABLE);
  3c:	4620      	mov	r0, r4
  3e:	4629      	mov	r1, r5
  40:	f7ff fffe 	bl	0 <ADC_SoftwareStartConvCmd>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:334
}
  44:	b007      	add	sp, #28
  46:	bd30      	pop	{r4, r5, pc}
  48:	40012400 	.word	0x40012400
Disassembly of section .text.GPIO_Configuration:

00000000 <GPIO_Configuration>:
GPIO_Configuration():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:217
  * @brief  Configures the different GPIO ports.
  * @param  None
  * @retval None
  */
void GPIO_Configuration(void)
{
   0:	e92d 4f73 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, lr}
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:232
  - ETH_MII_TXD1 / ETH_RMII_TXD1: PB13
  - ETH_MII_PPS_OUT / ETH_RMII_PPS_OUT: PB5
  - ETH_MII_TXD3: PB8 */

  /* Configure PA2 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
   4:	2604      	movs	r6, #4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:235
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
   6:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 100 <GPIO_Configuration+0x100>
   a:	eb0d 0406 	add.w	r4, sp, r6
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:241

  /* Configure PC1, PC2 and PC3 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_Init(GPIOC, &GPIO_InitStructure);
   e:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 104 <GPIO_Configuration+0x104>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:233
  - ETH_MII_PPS_OUT / ETH_RMII_PPS_OUT: PB5
  - ETH_MII_TXD3: PB8 */

  /* Configure PA2 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  12:	2503      	movs	r5, #3
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:234
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  14:	f04f 0a18 	mov.w	sl, #24	; 0x18
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:235
  GPIO_Init(GPIOA, &GPIO_InitStructure);
  18:	4658      	mov	r0, fp
  1a:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:248
  /* Configure PB5, PB8, PB11, PB12 and PB13 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_8 | GPIO_Pin_11 |
                                GPIO_Pin_12 | GPIO_Pin_13;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
  1c:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 108 <GPIO_Configuration+0x108>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:232
  - ETH_MII_TXD1 / ETH_RMII_TXD1: PB13
  - ETH_MII_PPS_OUT / ETH_RMII_PPS_OUT: PB5
  - ETH_MII_TXD3: PB8 */

  /* Configure PA2 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
  20:	f8ad 6004 	strh.w	r6, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:233
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  24:	f88d 5006 	strb.w	r5, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:234
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  28:	f88d a007 	strb.w	sl, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:235
  GPIO_Init(GPIOA, &GPIO_InitStructure);
  2c:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:238

  /* Configure PC1, PC2 and PC3 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;
  30:	f04f 0306 	mov.w	r3, #6	; 0x6
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:241
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_Init(GPIOC, &GPIO_InitStructure);
  34:	4640      	mov	r0, r8
  36:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:238
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_Init(GPIOA, &GPIO_InitStructure);

  /* Configure PC1, PC2 and PC3 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;
  38:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:239
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  3c:	f88d 5006 	strb.w	r5, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:240
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  40:	f88d a007 	strb.w	sl, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:241
  GPIO_Init(GPIOC, &GPIO_InitStructure);
  44:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:244

  /* Configure PB5, PB8, PB11, PB12 and PB13 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_8 | GPIO_Pin_11 |
  48:	f643 1320 	movw	r3, #14624	; 0x3920
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:248
                                GPIO_Pin_12 | GPIO_Pin_13;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
  4c:	4648      	mov	r0, r9
  4e:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:244
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_Init(GPIOC, &GPIO_InitStructure);

  /* Configure PB5, PB8, PB11, PB12 and PB13 as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_8 | GPIO_Pin_11 |
  50:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:246
                                GPIO_Pin_12 | GPIO_Pin_13;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  54:	f88d 5006 	strb.w	r5, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:247
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  58:	f88d a007 	strb.w	sl, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:248
  GPIO_Init(GPIOB, &GPIO_InitStructure);
  5c:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:266
  - ETH_MII_RXD2: PD11
  - ETH_MII_RXD3: PD12
  - ETH_MII_RX_ER: PB10 */

  /* ETHERNET pins remapp in STM3210C-EVAL board: RX_DV and RxD[3:0] */
  GPIO_PinRemapConfig(GPIO_Remap_ETH, ENABLE);
  60:	2101      	movs	r1, #1
  62:	f04f 1020 	mov.w	r0, #2097184	; 0x200020
  66:	f7ff fffe 	bl	0 <GPIO_PinRemapConfig>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:269

  /* Configure PA0, PA1 and PA3 as input */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_3;
  6a:	f04f 030b 	mov.w	r3, #11	; 0xb
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:272
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
  6e:	4658      	mov	r0, fp
  70:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:269

  /* ETHERNET pins remapp in STM3210C-EVAL board: RX_DV and RxD[3:0] */
  GPIO_PinRemapConfig(GPIO_Remap_ETH, ENABLE);

  /* Configure PA0, PA1 and PA3 as input */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_3;
  72:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:270
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  76:	f88d 5006 	strb.w	r5, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:271
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  7a:	f88d 6007 	strb.w	r6, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:272
  GPIO_Init(GPIOA, &GPIO_InitStructure);
  7e:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:275

  /* Configure PB10 as input */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
  82:	f44f 6380 	mov.w	r3, #1024	; 0x400
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:278
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
  86:	4648      	mov	r0, r9
  88:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:275
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  GPIO_Init(GPIOA, &GPIO_InitStructure);

  /* Configure PB10 as input */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
  8a:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:276
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  8e:	f88d 5006 	strb.w	r5, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:277
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  92:	f88d 6007 	strb.w	r6, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:278
  GPIO_Init(GPIOB, &GPIO_InitStructure);
  96:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:281

  /* Configure PC3 as input */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
  9a:	f04f 0308 	mov.w	r3, #8	; 0x8
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:284
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  GPIO_Init(GPIOC, &GPIO_InitStructure);
  9e:	4640      	mov	r0, r8
  a0:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:281
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  GPIO_Init(GPIOB, &GPIO_InitStructure);

  /* Configure PC3 as input */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
  a2:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:282
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  a6:	f88d 5006 	strb.w	r5, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:283
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  aa:	f88d 6007 	strb.w	r6, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:284
  GPIO_Init(GPIOC, &GPIO_InitStructure);
  ae:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:287

  /* Configure PD8, PD9, PD10, PD11 and PD12 as input */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12;
  b2:	f44f 53f8 	mov.w	r3, #7936	; 0x1f00
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:290
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  GPIO_Init(GPIOD, &GPIO_InitStructure); /**/
  b6:	4621      	mov	r1, r4
  b8:	4810      	ldr	r0, [pc, #64]	(fc <GPIO_Configuration+0xfc>)
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:287
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  GPIO_Init(GPIOC, &GPIO_InitStructure);

  /* Configure PD8, PD9, PD10, PD11 and PD12 as input */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12;
  ba:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:288
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  be:	f88d 5006 	strb.w	r5, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:289
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  c2:	f88d 6007 	strb.w	r6, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:290
  GPIO_Init(GPIOD, &GPIO_InitStructure); /**/
  c6:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:295

  /* ADC Channel14 config --------------------------------------------------------*/
  /* Relative to STM3210D-EVAL Board   */
  /* Configure PC.04 (ADC Channel14) as analog input -------------------------*/
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
  ca:	f04f 0310 	mov.w	r3, #16	; 0x10
  ce:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:297
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  GPIO_Init(GPIOC, &GPIO_InitStructure);
  d2:	4640      	mov	r0, r8
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:296

  /* ADC Channel14 config --------------------------------------------------------*/
  /* Relative to STM3210D-EVAL Board   */
  /* Configure PC.04 (ADC Channel14) as analog input -------------------------*/
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  d4:	2300      	movs	r3, #0
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:297
  GPIO_Init(GPIOC, &GPIO_InitStructure);
  d6:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:296

  /* ADC Channel14 config --------------------------------------------------------*/
  /* Relative to STM3210D-EVAL Board   */
  /* Configure PC.04 (ADC Channel14) as analog input -------------------------*/
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  d8:	f88d 3007 	strb.w	r3, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:297
  GPIO_Init(GPIOC, &GPIO_InitStructure);
  dc:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:301

  /* MCO pin configuration------------------------------------------------- */
  /* Configure MCO (PA8) as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
  e0:	f44f 7380 	mov.w	r3, #256	; 0x100
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:304
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
  e4:	4658      	mov	r0, fp
  e6:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:301
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  GPIO_Init(GPIOC, &GPIO_InitStructure);

  /* MCO pin configuration------------------------------------------------- */
  /* Configure MCO (PA8) as alternate function push-pull */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
  e8:	f8ad 3004 	strh.w	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:302
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  ec:	f88d 5006 	strb.w	r5, [sp, #6]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:303
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  f0:	f88d a007 	strb.w	sl, [sp, #7]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:304
  GPIO_Init(GPIOA, &GPIO_InitStructure);
  f4:	f7ff fffe 	bl	0 <GPIO_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:306

}
  f8:	e8bd 8f7c 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r8, r9, sl, fp, pc}
  fc:	40011400 	.word	0x40011400
 100:	40010800 	.word	0x40010800
 104:	40011000 	.word	0x40011000
 108:	40010c00 	.word	0x40010c00
Disassembly of section .text.Ethernet_Configuration:

00000000 <Ethernet_Configuration>:
Ethernet_Configuration():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:132
  * @brief  Configures the Ethernet Interface
  * @param  None
  * @retval None
  */
void Ethernet_Configuration(void)
{
   0:	b530      	push	{r4, r5, lr}
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:137
  ETH_InitTypeDef ETH_InitStructure;

  /* MII/RMII Media interface selection ------------------------------------------*/
#ifdef MII_MODE /* Mode MII with STM3210C-EVAL  */
  GPIO_ETH_MediaInterfaceConfig(GPIO_ETH_MediaInterface_MII);
   2:	2000      	movs	r0, #0
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:132
  * @brief  Configures the Ethernet Interface
  * @param  None
  * @retval None
  */
void Ethernet_Configuration(void)
{
   4:	b0b1      	sub	sp, #196
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:137
  ETH_InitTypeDef ETH_InitStructure;

  /* MII/RMII Media interface selection ------------------------------------------*/
#ifdef MII_MODE /* Mode MII with STM3210C-EVAL  */
  GPIO_ETH_MediaInterfaceConfig(GPIO_ETH_MediaInterface_MII);
   6:	f7ff fffe 	bl	0 <GPIO_ETH_MediaInterfaceConfig>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:140

  /* Get HSE clock = 25MHz on PA8 pin (MCO) */
  RCC_MCOConfig(RCC_MCO_HSE);
   a:	2006      	movs	r0, #6
   c:	f7ff fffe 	bl	0 <RCC_MCOConfig>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:158
  /* Get PLL3 clock on PA8 pin (MCO) */
  RCC_MCOConfig(RCC_MCO_PLL3CLK);
#endif

  /* Reset ETHERNET on AHB Bus */
  ETH_DeInit();
  10:	f7ff fffe 	bl	0 <ETH_DeInit>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:161

  /* Software reset */
  ETH_SoftwareReset();
  14:	f7ff fffe 	bl	0 <ETH_SoftwareReset>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:164

  /* Wait for software reset */
  while (ETH_GetSoftwareResetStatus() == SET);
  18:	f7ff fffe 	bl	0 <ETH_GetSoftwareResetStatus>
  1c:	2801      	cmp	r0, #1
  1e:	d0fb      	beq.n	18 <Ethernet_Configuration+0x18>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:168

  /* ETHERNET Configuration ------------------------------------------------------*/
  /* Call ETH_StructInit if you don't like to configure all ETH_InitStructure parameter */
  ETH_StructInit(&ETH_InitStructure);
  20:	ad01      	add	r5, sp, #4
  22:	4628      	mov	r0, r5
  24:	f7ff fffe 	bl	0 <ETH_StructInit>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:173

  /* Fill ETH_InitStructure parametrs */
  /*------------------------   MAC   -----------------------------------*/
  ETH_InitStructure.ETH_AutoNegotiation = ETH_AutoNegotiation_Enable  ;
  ETH_InitStructure.ETH_LoopbackMode = ETH_LoopbackMode_Disable;
  28:	2300      	movs	r3, #0
  2a:	9308      	str	r3, [sp, #32]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:175
  ETH_InitStructure.ETH_RetryTransmission = ETH_RetryTransmission_Disable;
  ETH_InitStructure.ETH_AutomaticPadCRCStrip = ETH_AutomaticPadCRCStrip_Disable;
  2c:	930c      	str	r3, [sp, #48]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:176
  ETH_InitStructure.ETH_ReceiveAll = ETH_ReceiveAll_Disable;
  2e:	930f      	str	r3, [sp, #60]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:177
  ETH_InitStructure.ETH_BroadcastFramesReception = ETH_BroadcastFramesReception_Enable;
  30:	9312      	str	r3, [sp, #72]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:178
  ETH_InitStructure.ETH_PromiscuousMode = ETH_PromiscuousMode_Disable;
  32:	9314      	str	r3, [sp, #80]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:179
  ETH_InitStructure.ETH_MulticastFramesFilter = ETH_MulticastFramesFilter_Perfect;
  34:	9315      	str	r3, [sp, #84]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:180
  ETH_InitStructure.ETH_UnicastFramesFilter = ETH_UnicastFramesFilter_Perfect;
  36:	9316      	str	r3, [sp, #88]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:190
  /*------------------------   DMA   -----------------------------------*/  
  
  /* When we use the Checksum offload feature, we need to enable the Store and Forward mode: 
  the store and forward guarantee that a whole frame is stored in the FIFO, so the MAC can insert/verify the checksum, 
  if the checksum is OK the DMA can handle the frame otherwise the frame is dropped */
  ETH_InitStructure.ETH_DropTCPIPChecksumErrorFrame = ETH_DropTCPIPChecksumErrorFrame_Enable; 
  38:	9321      	str	r3, [sp, #132]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:194
  ETH_InitStructure.ETH_ReceiveStoreForward = ETH_ReceiveStoreForward_Enable;         
  ETH_InitStructure.ETH_TransmitStoreForward = ETH_TransmitStoreForward_Enable;     
 
  ETH_InitStructure.ETH_ForwardErrorFrames = ETH_ForwardErrorFrames_Disable;       
  3a:	9326      	str	r3, [sp, #152]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:195
  ETH_InitStructure.ETH_ForwardUndersizedGoodFrames = ETH_ForwardUndersizedGoodFrames_Disable;   
  3c:	9327      	str	r3, [sp, #156]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:196
  ETH_InitStructure.ETH_SecondFrameOperate = ETH_SecondFrameOperate_Enable;                                                          
  3e:	3304      	adds	r3, #4
  40:	9329      	str	r3, [sp, #164]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:198
  ETH_InitStructure.ETH_AddressAlignedBeats = ETH_AddressAlignedBeats_Enable;      
  ETH_InitStructure.ETH_FixedBurst = ETH_FixedBurst_Enable;                
  42:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  46:	932b      	str	r3, [sp, #172]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:199
  ETH_InitStructure.ETH_RxDMABurstLength = ETH_RxDMABurstLength_32Beat;          
  48:	f503 137c 	add.w	r3, r3, #4128768	; 0x3f0000
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:172
  /* Call ETH_StructInit if you don't like to configure all ETH_InitStructure parameter */
  ETH_StructInit(&ETH_InitStructure);

  /* Fill ETH_InitStructure parametrs */
  /*------------------------   MAC   -----------------------------------*/
  ETH_InitStructure.ETH_AutoNegotiation = ETH_AutoNegotiation_Enable  ;
  4c:	2401      	movs	r4, #1
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:191
  
  /* When we use the Checksum offload feature, we need to enable the Store and Forward mode: 
  the store and forward guarantee that a whole frame is stored in the FIFO, so the MAC can insert/verify the checksum, 
  if the checksum is OK the DMA can handle the frame otherwise the frame is dropped */
  ETH_InitStructure.ETH_DropTCPIPChecksumErrorFrame = ETH_DropTCPIPChecksumErrorFrame_Enable; 
  ETH_InitStructure.ETH_ReceiveStoreForward = ETH_ReceiveStoreForward_Enable;         
  4e:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:199
  ETH_InitStructure.ETH_ForwardErrorFrames = ETH_ForwardErrorFrames_Disable;       
  ETH_InitStructure.ETH_ForwardUndersizedGoodFrames = ETH_ForwardUndersizedGoodFrames_Disable;   
  ETH_InitStructure.ETH_SecondFrameOperate = ETH_SecondFrameOperate_Enable;                                                          
  ETH_InitStructure.ETH_AddressAlignedBeats = ETH_AddressAlignedBeats_Enable;      
  ETH_InitStructure.ETH_FixedBurst = ETH_FixedBurst_Enable;                
  ETH_InitStructure.ETH_RxDMABurstLength = ETH_RxDMABurstLength_32Beat;          
  52:	932c      	str	r3, [sp, #176]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:174

  /* Fill ETH_InitStructure parametrs */
  /*------------------------   MAC   -----------------------------------*/
  ETH_InitStructure.ETH_AutoNegotiation = ETH_AutoNegotiation_Enable  ;
  ETH_InitStructure.ETH_LoopbackMode = ETH_LoopbackMode_Disable;
  ETH_InitStructure.ETH_RetryTransmission = ETH_RetryTransmission_Disable;
  54:	f44f 7200 	mov.w	r2, #512	; 0x200
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:200
  ETH_InitStructure.ETH_ForwardUndersizedGoodFrames = ETH_ForwardUndersizedGoodFrames_Disable;   
  ETH_InitStructure.ETH_SecondFrameOperate = ETH_SecondFrameOperate_Enable;                                                          
  ETH_InitStructure.ETH_AddressAlignedBeats = ETH_AddressAlignedBeats_Enable;      
  ETH_InitStructure.ETH_FixedBurst = ETH_FixedBurst_Enable;                
  ETH_InitStructure.ETH_RxDMABurstLength = ETH_RxDMABurstLength_32Beat;          
  ETH_InitStructure.ETH_TxDMABurstLength = ETH_TxDMABurstLength_32Beat;                                                                 
  58:	f44f 5300 	mov.w	r3, #8192	; 0x2000
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:174

  /* Fill ETH_InitStructure parametrs */
  /*------------------------   MAC   -----------------------------------*/
  ETH_InitStructure.ETH_AutoNegotiation = ETH_AutoNegotiation_Enable  ;
  ETH_InitStructure.ETH_LoopbackMode = ETH_LoopbackMode_Disable;
  ETH_InitStructure.ETH_RetryTransmission = ETH_RetryTransmission_Disable;
  5c:	920b      	str	r2, [sp, #44]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:191
  
  /* When we use the Checksum offload feature, we need to enable the Store and Forward mode: 
  the store and forward guarantee that a whole frame is stored in the FIFO, so the MAC can insert/verify the checksum, 
  if the checksum is OK the DMA can handle the frame otherwise the frame is dropped */
  ETH_InitStructure.ETH_DropTCPIPChecksumErrorFrame = ETH_DropTCPIPChecksumErrorFrame_Enable; 
  ETH_InitStructure.ETH_ReceiveStoreForward = ETH_ReceiveStoreForward_Enable;         
  5e:	9122      	str	r1, [sp, #136]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:192
  ETH_InitStructure.ETH_TransmitStoreForward = ETH_TransmitStoreForward_Enable;     
  60:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:197
 
  ETH_InitStructure.ETH_ForwardErrorFrames = ETH_ForwardErrorFrames_Disable;       
  ETH_InitStructure.ETH_ForwardUndersizedGoodFrames = ETH_ForwardUndersizedGoodFrames_Disable;   
  ETH_InitStructure.ETH_SecondFrameOperate = ETH_SecondFrameOperate_Enable;                                                          
  ETH_InitStructure.ETH_AddressAlignedBeats = ETH_AddressAlignedBeats_Enable;      
  64:	912a      	str	r1, [sp, #168]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:200
  ETH_InitStructure.ETH_FixedBurst = ETH_FixedBurst_Enable;                
  ETH_InitStructure.ETH_RxDMABurstLength = ETH_RxDMABurstLength_32Beat;          
  ETH_InitStructure.ETH_TxDMABurstLength = ETH_TxDMABurstLength_32Beat;                                                                 
  66:	932d      	str	r3, [sp, #180]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:204
  ETH_InitStructure.ETH_DMAArbitration = ETH_DMAArbitration_RoundRobin_RxTx_2_1;

  /* Configure Ethernet */
  ETH_Init(&ETH_InitStructure, PHY_ADDRESS);
  68:	4621      	mov	r1, r4
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:201
  ETH_InitStructure.ETH_SecondFrameOperate = ETH_SecondFrameOperate_Enable;                                                          
  ETH_InitStructure.ETH_AddressAlignedBeats = ETH_AddressAlignedBeats_Enable;      
  ETH_InitStructure.ETH_FixedBurst = ETH_FixedBurst_Enable;                
  ETH_InitStructure.ETH_RxDMABurstLength = ETH_RxDMABurstLength_32Beat;          
  ETH_InitStructure.ETH_TxDMABurstLength = ETH_TxDMABurstLength_32Beat;                                                                 
  ETH_InitStructure.ETH_DMAArbitration = ETH_DMAArbitration_RoundRobin_RxTx_2_1;
  6a:	18db      	adds	r3, r3, r3
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:204

  /* Configure Ethernet */
  ETH_Init(&ETH_InitStructure, PHY_ADDRESS);
  6c:	4628      	mov	r0, r5
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:172
  /* Call ETH_StructInit if you don't like to configure all ETH_InitStructure parameter */
  ETH_StructInit(&ETH_InitStructure);

  /* Fill ETH_InitStructure parametrs */
  /*------------------------   MAC   -----------------------------------*/
  ETH_InitStructure.ETH_AutoNegotiation = ETH_AutoNegotiation_Enable  ;
  6e:	9401      	str	r4, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:192
  /* When we use the Checksum offload feature, we need to enable the Store and Forward mode: 
  the store and forward guarantee that a whole frame is stored in the FIFO, so the MAC can insert/verify the checksum, 
  if the checksum is OK the DMA can handle the frame otherwise the frame is dropped */
  ETH_InitStructure.ETH_DropTCPIPChecksumErrorFrame = ETH_DropTCPIPChecksumErrorFrame_Enable; 
  ETH_InitStructure.ETH_ReceiveStoreForward = ETH_ReceiveStoreForward_Enable;         
  ETH_InitStructure.ETH_TransmitStoreForward = ETH_TransmitStoreForward_Enable;     
  70:	9224      	str	r2, [sp, #144]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:201
  ETH_InitStructure.ETH_SecondFrameOperate = ETH_SecondFrameOperate_Enable;                                                          
  ETH_InitStructure.ETH_AddressAlignedBeats = ETH_AddressAlignedBeats_Enable;      
  ETH_InitStructure.ETH_FixedBurst = ETH_FixedBurst_Enable;                
  ETH_InitStructure.ETH_RxDMABurstLength = ETH_RxDMABurstLength_32Beat;          
  ETH_InitStructure.ETH_TxDMABurstLength = ETH_TxDMABurstLength_32Beat;                                                                 
  ETH_InitStructure.ETH_DMAArbitration = ETH_DMAArbitration_RoundRobin_RxTx_2_1;
  72:	932f      	str	r3, [sp, #188]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:204

  /* Configure Ethernet */
  ETH_Init(&ETH_InitStructure, PHY_ADDRESS);
  74:	f7ff fffe 	bl	0 <ETH_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:207

  /* Enable the Ethernet Rx Interrupt */
  ETH_DMAITConfig(ETH_DMA_IT_NIS | ETH_DMA_IT_R, ENABLE);
  78:	4802      	ldr	r0, [pc, #8]	(84 <Ethernet_Configuration+0x84>)
  7a:	4621      	mov	r1, r4
  7c:	f7ff fffe 	bl	0 <ETH_DMAITConfig>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:209

}
  80:	b031      	add	sp, #196
  82:	bd30      	pop	{r4, r5, pc}
  84:	00010040 	.word	0x00010040
Disassembly of section .text.System_Setup:

00000000 <System_Setup>:
System_Setup():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:53
  * @brief  Setup STM32 system (clocks, Ethernet, GPIO, NVIC) and STM3210C-EVAL resources.
  * @param  None
  * @retval None
  */
void System_Setup(void)
{
   0:	b510      	push	{r4, lr}
   2:	b086      	sub	sp, #24
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:57
  RCC_ClocksTypeDef RCC_Clocks;

  /* Setup STM32 clock, PLL and Flash configuration) */
  SystemInit();
   4:	f7ff fffe 	bl	0 <SystemInit>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:60

  /* Enable USART2 clock */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
   8:	2101      	movs	r1, #1
   a:	f44f 3000 	mov.w	r0, #131072	; 0x20000
   e:	f7ff fffe 	bl	0 <RCC_APB1PeriphClockCmd>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:64


  /* Enable ETHERNET clock  */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_ETH_MAC | RCC_AHBPeriph_ETH_MAC_Tx |
  12:	2101      	movs	r1, #1
  14:	f44f 30e0 	mov.w	r0, #114688	; 0x1c000
  18:	f7ff fffe 	bl	0 <RCC_AHBPeriphClockCmd>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:68
                        RCC_AHBPeriph_ETH_MAC_Rx, ENABLE);

  /* Enable GPIOs and ADC1 clocks */
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC |
  1c:	2101      	movs	r1, #1
  1e:	f240 207d 	movw	r0, #637	; 0x27d
  22:	f7ff fffe 	bl	0 <RCC_APB2PeriphClockCmd>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:73
                         RCC_APB2Periph_GPIOD | RCC_APB2Periph_GPIOE | RCC_APB2Periph_AFIO |
						 RCC_APB2Periph_ADC1, ENABLE);
  
  /* NVIC configuration */
  NVIC_Configuration();  
  26:	f7ff fffe 	bl	0 <System_Setup>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:76

  /* ADC configuration */
  ADC_Configuration();
  2a:	f7ff fffe 	bl	0 <System_Setup>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:79

  /* Configure the GPIO ports */
  GPIO_Configuration();
  2e:	f7ff fffe 	bl	0 <System_Setup>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:82

  /* Initialize the STM3210C-EVAL's LCD */
  STM3210C_LCD_Init();
  32:	f7ff fffe 	bl	0 <STM3210C_LCD_Init>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:85

  /* Initialize STM3210C-EVAL's LEDs */
  STM_EVAL_LEDInit(LED1);
  36:	2000      	movs	r0, #0
  38:	f7ff fffe 	bl	0 <STM_EVAL_LEDInit>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:86
  STM_EVAL_LEDInit(LED2);
  3c:	2001      	movs	r0, #1
  3e:	f7ff fffe 	bl	0 <STM_EVAL_LEDInit>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:87
  STM_EVAL_LEDInit(LED3);
  42:	2002      	movs	r0, #2
  44:	f7ff fffe 	bl	0 <STM_EVAL_LEDInit>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:88
  STM_EVAL_LEDInit(LED4);
  48:	2003      	movs	r0, #3
  4a:	f7ff fffe 	bl	0 <STM_EVAL_LEDInit>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:91

  /* Turn on leds available on STM3210X-EVAL */
  STM_EVAL_LEDOn(LED1);
  4e:	2000      	movs	r0, #0
  50:	f7ff fffe 	bl	0 <STM_EVAL_LEDOn>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:92
  STM_EVAL_LEDOn(LED2);
  54:	2001      	movs	r0, #1
  56:	f7ff fffe 	bl	0 <STM_EVAL_LEDOn>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:93
  STM_EVAL_LEDOn(LED3);
  5a:	2002      	movs	r0, #2
  5c:	f7ff fffe 	bl	0 <STM_EVAL_LEDOn>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:94
  STM_EVAL_LEDOn(LED4);
  60:	2003      	movs	r0, #3
  62:	f7ff fffe 	bl	0 <STM_EVAL_LEDOn>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:97

  /* Clear the LCD */
  LCD_Clear(Blue);
  66:	201f      	movs	r0, #31
  68:	f7ff fffe 	bl	0 <LCD_Clear>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:100

  /* Set the LCD Back Color */
  LCD_SetBackColor(Blue);
  6c:	201f      	movs	r0, #31
  6e:	f7ff fffe 	bl	0 <LCD_SetBackColor>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:103

  /* Set the LCD Text Color */
  LCD_SetTextColor(White);
  72:	f64f 70ff 	movw	r0, #65535	; 0xffff
  76:	f7ff fffe 	bl	0 <LCD_SetTextColor>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:106

  /* Display message on the LCD*/
  LCD_DisplayStringLine(Line0, MESSAGE1);
  7a:	2000      	movs	r0, #0
  7c:	4919      	ldr	r1, [pc, #100]	(e4 <System_Setup+0xe4>)
  7e:	f7ff fffe 	bl	0 <LCD_DisplayStringLine>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:107
  LCD_DisplayStringLine(Line1, MESSAGE2);
  82:	2018      	movs	r0, #24
  84:	4918      	ldr	r1, [pc, #96]	(e8 <System_Setup+0xe8>)
  86:	f7ff fffe 	bl	0 <LCD_DisplayStringLine>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:108
  LCD_DisplayStringLine(Line2, MESSAGE3);
  8a:	2030      	movs	r0, #48
  8c:	4917      	ldr	r1, [pc, #92]	(ec <System_Setup+0xec>)
  8e:	f7ff fffe 	bl	0 <LCD_DisplayStringLine>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:109
  LCD_DisplayStringLine(Line3, MESSAGE4);
  92:	2048      	movs	r0, #72
  94:	4916      	ldr	r1, [pc, #88]	(f0 <System_Setup+0xf0>)
  96:	f7ff fffe 	bl	0 <LCD_DisplayStringLine>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:112

  /* Configure the Ethernet peripheral */
  Ethernet_Configuration();
  9a:	f7ff fffe 	bl	0 <System_Setup>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:115

  /* SystTick configuration: an interrupt every 10ms */
  RCC_GetClocksFreq(&RCC_Clocks);
  9e:	a801      	add	r0, sp, #4
  a0:	f7ff fffe 	bl	0 <RCC_GetClocksFreq>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:116
  SysTick_Config(RCC_Clocks.SYSCLK_Frequency / 100);
  a4:	9b01      	ldr	r3, [sp, #4]
  a6:	2264      	movs	r2, #100
  a8:	fbb3 f3f2 	udiv	r3, r3, r2
SysTick_Config():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1301
 * system tick timer / counter in free running mode to generate 
 * periodical interrupts.
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{ 
  if (ticks > SYSTICK_MAXCOUNT)  return (1);                                             /* Reload value impossible */
  ac:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
  b0:	d20d      	bcs.n	ce <System_Setup+0xce>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1303

  SysTick->LOAD  =  (ticks & SYSTICK_MAXCOUNT) - 1;                                      /* set reload register */
  b2:	4c10      	ldr	r4, [pc, #64]	(f4 <System_Setup+0xf4>)
  b4:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  b8:	3b01      	subs	r3, #1
  ba:	6063      	str	r3, [r4, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1304
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);                            /* set Priority for Cortex-M0 System Interrupts */
  bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  c0:	210f      	movs	r1, #15
  c2:	f7ff fffe 	bl	0 <System_Setup>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1305
  SysTick->VAL   =  (0x00);                                                              /* Load the SysTick Counter Value */
  c6:	2300      	movs	r3, #0
  c8:	60a3      	str	r3, [r4, #8]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE/..\..\Libraries\CMSIS\Core\CM3/core_cm3.h:1306
  SysTick->CTRL = (1 << SYSTICK_CLKSOURCE) | (1<<SYSTICK_ENABLE) | (1<<SYSTICK_TICKINT); /* Enable SysTick IRQ and SysTick Timer */
  ca:	3307      	adds	r3, #7
  cc:	6023      	str	r3, [r4, #0]
System_Setup():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:120

  /* Update the SysTick IRQ priority should be higher than the Ethernet IRQ */
  /* The Localtime should be updated during the Ethernet packets processing */
  NVIC_SetPriority (SysTick_IRQn, 1);  
  ce:	2101      	movs	r1, #1
  d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  d4:	f7ff fffe 	bl	0 <System_Setup>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:123
  
  /* Configure the Key button */ 
  STM_EVAL_PBInit(Button_KEY, Mode_GPIO);
  d8:	2002      	movs	r0, #2
  da:	2100      	movs	r1, #0
  dc:	f7ff fffe 	bl	0 <STM_EVAL_PBInit>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\src/stm32f107.c:124
}
  e0:	b006      	add	sp, #24
  e2:	bd10      	pop	{r4, pc}
  e4:	00000000 	.word	0x00000000
  e8:	00000015 	.word	0x00000015
  ec:	0000002a 	.word	0x0000002a
  f0:	0000003f 	.word	0x0000003f
  f4:	e000e010 	.word	0xe000e010
