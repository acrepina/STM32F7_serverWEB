
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE\STM3210C-EVAL\system_stm32f10x.o:     file format elf32-littlearm
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Project\RIDE\STM3210C-EVAL\system_stm32f10x.o

Disassembly of section .text.SystemInit:

00000000 <SystemInit>:
SystemInit():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:191
  */
void SystemInit (void)
{
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
   0:	4a47      	ldr	r2, [pc, #284]	(120 <SystemInit+0x120>)
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:188
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
   2:	b082      	sub	sp, #8
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:191
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
   4:	6813      	ldr	r3, [r2, #0]
   6:	f043 0301 	orr.w	r3, r3, #1	; 0x1
   a:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:197

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#ifndef STM32F10X_CL
  RCC->CFGR &= (uint32_t)0xF8FF0000;
#else
  RCC->CFGR &= (uint32_t)0xF0FF0000;
   c:	6851      	ldr	r1, [r2, #4]
   e:	4b45      	ldr	r3, [pc, #276]	(124 <SystemInit+0x124>)
  10:	ea01 0303 	and.w	r3, r1, r3
  14:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:201
#endif /* STM32F10X_CL */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
  16:	6813      	ldr	r3, [r2, #0]
  18:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
  1c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  20:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:204

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
  22:	6813      	ldr	r3, [r2, #0]
  24:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
  28:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:207

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
  2a:	6853      	ldr	r3, [r2, #4]
  2c:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
  30:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:214
#ifndef STM32F10X_CL
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000;
#else
  /* Reset PLL2ON and PLL3ON bits */
  RCC->CR &= (uint32_t)0xEBFFFFFF;
  32:	6813      	ldr	r3, [r2, #0]
  34:	f023 53a0 	bic.w	r3, r3, #335544320	; 0x14000000
  38:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:217

  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x00FF0000;
  3a:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
  3e:	6093      	str	r3, [r2, #8]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:220

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000;
  40:	f5a3 037f 	sub.w	r3, r3, #16711680	; 0xff0000
  44:	62d3      	str	r3, [r2, #44]
SetSysClockTo72():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:820
  * @param  None
  * @retval None
  */
static void SetSysClockTo72(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  46:	9301      	str	r3, [sp, #4]
  48:	9300      	str	r3, [sp, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:824
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
  /* Enable HSE */    
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  4a:	6813      	ldr	r3, [r2, #0]
  4c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  50:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:829
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
  52:	4b33      	ldr	r3, [pc, #204]	(120 <SystemInit+0x120>)
  54:	681b      	ldr	r3, [r3, #0]
  56:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  5a:	9300      	str	r3, [sp, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:830
    StartUpCounter++;  
  5c:	9b01      	ldr	r3, [sp, #4]
  5e:	3301      	adds	r3, #1
  60:	9301      	str	r3, [sp, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:831
  } while((HSEStatus == 0) && (StartUpCounter != HSEStartUp_TimeOut));
  62:	9b00      	ldr	r3, [sp, #0]
  64:	b91b      	cbnz	r3, 6e <SystemInit+0x6e>
  66:	9b01      	ldr	r3, [sp, #4]
  68:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
  6c:	d1f1      	bne.n	52 <SystemInit+0x52>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:833

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
  6e:	4b2c      	ldr	r3, [pc, #176]	(120 <SystemInit+0x120>)
  70:	681b      	ldr	r3, [r3, #0]
  72:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:835
  {
    HSEStatus = (uint32_t)0x01;
  76:	bf18      	it	ne
  78:	2301      	movne	r3, #1
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:839
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
  7a:	9300      	str	r3, [sp, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:842
  }  

  if (HSEStatus == (uint32_t)0x01)
  7c:	9b00      	ldr	r3, [sp, #0]
  7e:	2b01      	cmp	r3, #1
  80:	d14a      	bne.n	118 <SystemInit+0x118>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:845
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
  82:	4a29      	ldr	r2, [pc, #164]	(128 <SystemInit+0x128>)
  84:	6813      	ldr	r3, [r2, #0]
  86:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  8a:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:848

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
  8c:	6813      	ldr	r3, [r2, #0]
  8e:	f023 0303 	bic.w	r3, r3, #3	; 0x3
  92:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:849
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
  94:	6813      	ldr	r3, [r2, #0]
  96:	f043 0302 	orr.w	r3, r3, #2	; 0x2
  9a:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:853

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
  9c:	f5a2 5280 	sub.w	r2, r2, #4096	; 0x1000
  a0:	6853      	ldr	r3, [r2, #4]
  a2:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:856
      
    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
  a4:	6853      	ldr	r3, [r2, #4]
  a6:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:859
    
    /* PCLK1 = HCLK/2 */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
  a8:	6853      	ldr	r3, [r2, #4]
  aa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  ae:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:866
#ifdef STM32F10X_CL
    /* Configure PLLs ------------------------------------------------------*/
    /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
    /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
        
    RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
  b0:	6ad1      	ldr	r1, [r2, #44]
  b2:	4b1e      	ldr	r3, [pc, #120]	(12c <SystemInit+0x12c>)
  b4:	ea01 0303 	and.w	r3, r1, r3
  b8:	62d3      	str	r3, [r2, #44]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:868
                              RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
    RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
  ba:	6ad3      	ldr	r3, [r2, #44]
  bc:	f443 3382 	orr.w	r3, r3, #66560	; 0x10400
  c0:	f443 7311 	orr.w	r3, r3, #580	; 0x244
  c4:	62d3      	str	r3, [r2, #44]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:872
                             RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
  
    /* Enable PLL2 */
    RCC->CR |= RCC_CR_PLL2ON;
  c6:	6813      	ldr	r3, [r2, #0]
  c8:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
  cc:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:874
    /* Wait till PLL2 is ready */
    while((RCC->CR & RCC_CR_PLL2RDY) == 0)
  ce:	4a14      	ldr	r2, [pc, #80]	(120 <SystemInit+0x120>)
  d0:	6813      	ldr	r3, [r2, #0]
  d2:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
  d6:	d0fa      	beq.n	ce <SystemInit+0xce>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:880
    {
    }
    
   
    /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
    RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
  d8:	6853      	ldr	r3, [r2, #4]
  da:	f423 137c 	bic.w	r3, r3, #4128768	; 0x3f0000
  de:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:881
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
  e0:	6853      	ldr	r3, [r2, #4]
  e2:	f443 13e8 	orr.w	r3, r3, #1900544	; 0x1d0000
  e6:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:891
                                        RCC_CFGR_PLLMULL));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
  e8:	6813      	ldr	r3, [r2, #0]
  ea:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  ee:	6013      	str	r3, [r2, #0]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:894

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
  f0:	4a0b      	ldr	r2, [pc, #44]	(120 <SystemInit+0x120>)
  f2:	6813      	ldr	r3, [r2, #0]
  f4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
  f8:	d0fa      	beq.n	f0 <SystemInit+0xf0>
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:899
    {
    }
    
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
  fa:	6853      	ldr	r3, [r2, #4]
  fc:	f023 0303 	bic.w	r3, r3, #3	; 0x3
 100:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:900
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 102:	6853      	ldr	r3, [r2, #4]
 104:	f043 0302 	orr.w	r3, r3, #2	; 0x2
 108:	6053      	str	r3, [r2, #4]
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:903

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 10a:	4b05      	ldr	r3, [pc, #20]	(120 <SystemInit+0x120>)
 10c:	685b      	ldr	r3, [r3, #4]
 10e:	f003 030c 	and.w	r3, r3, #12	; 0xc
 112:	2b08      	cmp	r3, #8
 114:	d1f9      	bne.n	10a <SystemInit+0x10a>
 116:	e000      	b.n	11a <SystemInit+0x11a>
 118:	e7fe      	b.n	118 <SystemInit+0x118>
SystemInit():
D:\SAV\STM32_Documents\lwip_st_STM32\STM32F107_ETH_LwIP_V1.0.0\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:227
    
  /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
  /* Configure the Flash Latency cycles and enable prefetch buffer */
  SetSysClock();

}
 11a:	b002      	add	sp, #8
 11c:	4770      	bx	lr
 11e:	46c0      	nop			(mov r8, r8)
 120:	40021000 	.word	0x40021000
 124:	f0ff0000 	.word	0xf0ff0000
 128:	40022000 	.word	0x40022000
 12c:	fffef000 	.word	0xfffef000
